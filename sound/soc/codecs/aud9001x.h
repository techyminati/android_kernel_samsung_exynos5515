/*
 * Copyright (c) 2014 Samsung Electronics Co. Ltd.
 *
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef _AUD9001X_H
#define _AUD9001X_H

#include <linux/completion.h>

#include <sound/soc.h>
#include <linux/iio/consumer.h>

#define CONFIG_SND_SOC_SAMSUNG_VERBOSE_DEBUG 1

#define AUD9001X_MAX_REGISTER				0xFC

#define AUD9001X_REGCACHE_SYNC_START_REG	0x00
#define AUD9001X_REGCACHE_SYNC_END_REG		0xFC

#define BIT_RATE_16							16
#define BIT_RATE_24							24
#define BIT_RATE_32							32

struct aud9001x_priv {
	/* Codec */
	struct snd_soc_component *codec;
	struct regmap *regmap;
	struct device *dev;
	struct pinctrl *pinctrl;
	/* Workqueue */
	struct delayed_work adc_mute_work;
	struct workqueue_struct *adc_mute_wq;
	/* Regulator */
	struct regulator *vdd;
	struct regulator *vdd2;
	unsigned int regulator_count;
	/* Mutex */
	struct mutex adc_mute_lock;
	/* Debug */
	bool is_suspend;
	bool is_probe_done;
	bool playback_on;
	bool capture_on;
	unsigned int playback_aifrate;
	unsigned int capture_aifrate;
	unsigned int dmic_delay;
};

/*
 * Helper macros for creating bitmasks
 */
#define MASK(width, shift)	(((0x1 << (width)) - 1) << shift)

/*
 * Register values.
*/

/* PMIC DMIC BIAS Register */
#define PMIC_ADDR						0x01
#define CODEC_ADDR						0x03
#define PMIC_DMIC_BIAS_REG				0xA8
#define DMIC_BIAS2_EN_MASK				BIT(7)
#define DMIC_BIAS1_EN_MASK				BIT(6)

/* Audio IRQ and Status */
#define AUD9001X_00_BASE_REG			0x00
#define AUD9001X_01_IRQ1				0x01
#define AUD9001X_02_IRQ2				0x02
#define AUD9001X_03_IRQ3				0x03
#define AUD9001X_04_IRQ4				0x04
#define AUD9001X_07_IRQ3M				0x07
#define AUD9001X_08_IRQ4M				0x08
#define AUD9001X_0E_IO_CTRL0			0x0E
#define AUD9001X_0F_IO_CTRL1			0x0F

/* Power Down, Reference circuit */
#define AUD9001X_10_PD_REF				0x10
#define AUD9001X_14_PD_DA1				0x14
#define AUD9001X_15_PD_DA2				0x15
#define AUD9001X_18_PWAUTO_DA			0x18
#define AUD9001X_19_CTRL_REF			0x19
#define AUD9001X_1B_SDM_CTR				0x1B
#define AUD9001X_1D_SV_DA				0x1D

/* Recoding Path */
#define AUC9001X_20_AVC_Para29			0x20
#define AUC9001X_21_AVC_Para30			0x21
#define AUC9001X_22_AVC_Para31			0x22
#define AUC9001X_23_AVC_Para32			0x23
#define AUC9001X_24_AVC_Para33			0x24
#define AUC9001X_25_AVC_Para34			0x25
#define AUC9001X_26_AVC_Para35			0x26
#define AUC9001X_27_AVC_Para36			0x27
#define AUC9001X_28_AVC_Para37			0x28
#define AUC9001X_29_AVC_Para38			0x29
#define AUC9001X_2A_AVC_Para39			0x2A
#define AUC9001X_2B_AVC_Para40			0x2B
#define AUC9001X_2E_OCPCTRL0			0x2E
#define AUC9001X_2F_OCPCTRL1			0x2F

/* Playback Path */
#define AUD9001X_32_VOL_SPK				0x32
#define AUD9001X_36_CTRL_SPK			0x36
#define AUD9001X_39_DCT_CLK1			0x39
#define AUD9001X_3A_KARAOKE0			0x3A
#define AUD9001X_3B_KARAOKE1			0x3B
#define AUD9001X_3C_KARAOKE2			0x3C

/* Digital Function */
#define AUD9001X_40_PD					0x40
#define AUD9001X_41_IF1_FORM1			0x41
#define AUD9001X_42_IF1_FORM2			0x42
#define AUD9001X_43_IF1_FORM3			0x43
#define AUD9001X_44_IF1_FORM4			0x44
#define AUD9001X_45_IF1_FORM5			0x45
#define AUD9001X_46_ADC1				0x46
#define AUD9001X_47_AVOLL1				0x47
#define AUD9001X_48_AVOLR1				0x48
#define AUD9001X_49_DMIC_CTR1			0X49
#define AUD9001X_4A_DMIC_CTR2			0x4A
#define AUD9001X_4B_AVOLL1_SUB			0x4B
#define AUD9001X_4C_AVOLR1_SUB			0x4C

#define AUD9001X_50_DAC1				0x50
#define AUD9001X_51_DVOLL				0x51
#define AUD9001X_52_DVOLR				0x52
#define AUD9001X_53_MQS					0x53
#define AUD9001X_54_AVC1				0x54
#define AUD9001X_55_AVC2				0x55
#define AUD9001X_56_AVC3				0x56
#define AUD9001X_57_AVC4				0x57
#define AUD9001X_58_AVC5				0x58
#define AUD9001X_59_AVC6				0x59
#define AUD9001X_5A_AVC7				0x5A
#define AUD9001X_5B_AVC8				0x5B
#define AUD9001X_5C_AVC9				0x5C
#define AUD9001X_5D_AVC10				0x5D
#define AUD9001X_5E_AVC11				0x5E
#define AUD9001X_5F_AVC12				0x5F

/* Sensor Detection & IRQ control */
#define AUD9001X_60_IRQ_SENSOR			0x60
#define AUD9001X_61_OCP_FLAG			0x61

/* Test Mode Selection */
#define AUD9001X_64_TEST_AD				0x64
#define AUD9001X_67_CED_CHK1			0x67
#define AUD9001X_68_CED_CHK2			0x68
#define AUD9001X_69_CED_CHK3			0x69

/* SW Reserverd */
#define AUD9001X_6C_SW_RESERV			0x6C

/* Testing Register */
#define AUD9001X_71_CLK2_COD			0x71
#define AUD9001X_72_CLK3_COD			0x72
#define AUD9001X_73_DSM1_DA				0x73
#define AUD9001X_74_DSM2_DA				0x74
#define AUD9001X_75_OFFSET				0x75
#define AUD9001X_77_CHOP_DA				0x77
#define AUD9001X_7A_MAN_GN1				0x7A
#define AUD9001X_7B_MAN_GN2				0x7B

/* Accessory Detection */
#define AUD9001X_80_PDB_ACC1            0x80
#define AUD9001X_81_PDB_ACC2            0x81

/* Boost Control Register */
#define AUD9001X_92_BOOST_HR0			0x92
#define AUD9001X_93_BOOST_HR1			0x93
#define AUD9001X_94_BST_CTL				0x94
#define AUD9001X_95_FG_DAT_RO0			0x95
#define AUD9001X_96_FG_DAT_RO1			0x96
#define AUD9001X_97_VBAT_M0				0x97
#define AUD9001X_98_VBAT_M1				0x98
#define AUD9001X_99_TEST_VBAT			0x99
#define AUD9001X_9A_VSUM_RO0			0x9A
#define AUD9001X_9B_VSUM_RO1			0x9B
#define AUD9001X_9C_BOOST_CTR_RO		0x9C
#define AUD9001X_9D_BGC4_0				0x9D
#define AUD9001X_9E_BGC4_1				0x9E
#define AUD9001X_9F_BGC4_2				0x9F

/* SPK Audio Sequence */
#define AUD9001X_B0_CTR_SPK_MU1			0xB0
#define AUD9001X_B1_CTR_SPK_MU2			0xB1
#define AUD9001X_B2_CTR_SPK_MU3			0xB2
#define AUD9001X_B3_CTR_SPK_MU4			0xB3
#define AUD9001X_B4_CTR_SPK_MU5			0xB4
#define AUD9001X_B5_CTR_SPK_MU6			0xB5
#define AUD9001X_B6_CTR_SPK_MU7			0xB6

#define AUD9001X_D8_OFFSET_DAL			0xD8
#define AUD9001X_D9_OFFSET_DAR			0xD9

/* OTP for ANALOG control */
#define AUD9001X_DA_CTRL_IREF5			0xDA
#define AUD9001X_DB_CTRL_SPKS1			0xDB
#define AUD9001X_DC_CTRL_SPKS2			0xDC
#define AUD9001X_DD_CTRL_SPKS3			0xDD

/* AVC Slope Parameter */
#define AUD9001X_E0_AVC_PARA0			0xE0
#define AUD9001X_E1_AVC_PARA1			0xE1
#define AUD9001X_E2_AVC_PARA2			0xE2
#define AUD9001X_E3_AVC_PARA3			0xE3
#define AUD9001X_E4_AVC_PARA4			0xE4
#define AUD9001X_E5_AVC_PARA5			0xE5
#define AUD9001X_E6_AVC_PARA6			0xE6
#define AUD9001X_E7_AVC_PARA7			0xE7
#define AUD9001X_E8_AVC_PARA8			0xE8
#define AUD9001X_E9_AVC_PARA9			0xE9
#define AUD9001X_EA_AVC_PARA10			0xEA
#define AUD9001X_EB_AVC_PARA11			0xEB
#define AUD9001X_EC_AVC_PARA12			0xEC
#define AUD9001X_ED_AVC_PARA13			0xED
#define AUD9001X_EE_AVC_PARA14			0xEE
#define AUD9001X_EF_AVC_PARA15			0xEF
#define AUD9001X_F0_AVC_PARA16			0xF0
#define AUD9001X_F1_AVC_PARA17			0xF1
#define AUD9001X_F2_AVC_PARA18			0xF2
#define AUD9001X_F3_AVC_PARA19			0xF3
#define AUD9001X_F4_AVC_PARA20			0xF4
#define AUD9001X_F5_AVC_PARA21			0xF5
#define AUD9001X_F6_AVC_PARA22			0xF6
#define AUD9001X_F7_AVC_PARA23			0xF7
#define AUD9001X_F8_AVC_PARA24			0xF8
#define AUD9001X_F9_AVC_PARA25			0xF9
#define AUD9001X_FA_AVC_PARA26			0xFA
#define AUD9001X_FB_AVC_PARA27			0xFB
#define AUD9001X_FC_AVC_PARA28			0xFC
#define AUD9001X_FD_ODSEL4				0xFD
#define AUD9001X_FE_ODSEL5				0xFE
#define AUD9001X_FF_ODSEL6				0xFF

/* AUD9001X_03_IRQ3 */
#define IRQ3_ERR_FLG_BCK_R				BIT(7)
#define IRQ3_ERR_FLG_XBCK_R				BIT(6)
#define IRQ3_ERR_FLG_LRCK_R				BIT(5)
#define IRQ3_ERR_FLG_XLRCK_R			BIT(4)
#define IRQ3_OCP_END_R					BIT(3)
#define IRQ3_MUTE_FLG_R					BIT(2)
#define IRQ3_ERR_FLG_FG_R				BIT(1)
#define IRQ3_APON_SPK_R					BIT(0)

/* AUD9001X_04_IRQ4 */
#define IRQ4_ERR_FLG_BCK_F				BIT(7)
#define IRQ4_ERR_FLG_XBCK_F				BIT(6)
#define IRQ4_ERR_FLG_LRCK_F				BIT(5)
#define IRQ4_ERR_FLG_XLRCK_F			BIT(4)
#define IRQ4_OCP_END_F					BIT(3)
#define IRQ4_MUTE_FLG_F					BIT(2)
#define IRQ4_ERR_FLG_FG_F				BIT(1)
#define IRQ4_APON_SPK_F					BIT(0)

/* AUD9001X_07_IRQ3M */
#define IRQ3M_ERR_FLG_BCK_R_M_SHIFT		7
#define IRQ3M_ERR_FLG_BCK_R_M_MASK			BIT(IRQ3M_ERR_FLG_BCK_R_M_SHIFT)

#define IRQ3M_ERR_FLG_XBCK_R_M_SHIFT	6
#define IRQ3M_ERR_FLG_XBCK_R_M_MASK		BIT(IRQ3M_ERR_FLG_XBCK_R_M_SHIFT)

#define IRQ3M_ERR_FLG_LRCK_R_M_SHIFT	5
#define IRQ3M_ERR_FLG_LRCK_R_M_MASK		BIT(IRQ3M_ERR_FLG_LRCK_R_M_SHIFT)

#define IRQ3M_ERR_FLG_XLRCK_R_M_SHIFT	4
#define IRQ3M_ERR_FLG_XLRCK_R_M_MASK	BIT(IRQ3M_ERR_FLG_XLRCK_R_M_SHIFT)

#define IRQ3M_OCP_END_R_M_SHIFT			3
#define IRQ3M_OCP_END_R_M_MASK			BIT(IRQ3M_OCP_END_R_M_SHIFT)

#define IRQ3M_MUTE_FLG_R_M_SHIFT		2
#define IRQ3M_MUTE_FLG_R_M_MASK			BIT(IRQ3M_MUTE_FLG_R_M_SHIFT)

#define IRQ3M_ERR_FLG_FG_R_M_SHIFT		1
#define IRQ3M_ERR_FLG_FG_R_M_MASK		BIT(IRQ3M_ERR_FLG_FG_R_M_SHIFT)

#define IRQ3M_APON_SPK_R_M_SHIFT		0
#define IRQ3M_APON_SPK_R_M_MASK			BIT(IRQ3M_APON_SPK_R_M_SHIFT)

#define IRQ3M_MASK_ALL					0xFF

/* AUD9001X_08_IRQ4M */
#define IRQ4M_ERR_FLG_BCK_F_M_SHIFT		7
#define IRQ4M_ERR_FLG_BCK_F_M_MASK		BIT(IRQ4M_ERR_FLG_BCK_F_M_SHIFT)

#define IRQ4M_ERR_FLG_XBCK_F_M_SHIFT	6
#define IRQ4M_ERR_FLG_XBCK_F_M_MASK		BIT(IRQ4M_ERR_FLG_XBCK_F_M_SHIFT)

#define IRQ4M_ERR_FLG_LRCK_F_M_SHIFT	5
#define IRQ4M_ERR_FLG_LRCK_F_M_MASK		BIT(IRQ4M_ERR_FLG_LRCK_F_M_SHIFT)

#define IRQ4M_ERR_FLG_XLRCK_F_M_SHIFT	4
#define IRQ4M_ERR_FLG_XLRCK_F_M_MASK	BIT(IRQ4M_ERR_FLG_XLRCK_F_M_SHIFT)

#define IRQ4M_OCP_END_F_M_SHIFT			3
#define IRQ4M_OCP_END_F_M_MASK			BIT(IRQ4M_OCP_END_F_M_SHIFT)

#define IRQ4M_MUTE_FLG_F_M_SHIFT		2
#define IRQ4M_MUTE_FLG_F_M_MASK			BIT(IRQ4M_MUTE_FLG_F_M_SHIFT)

#define IRQ4M_ERR_FLG_FG_F_M_SHIFT		1
#define IRQ4M_ERR_FLG_FG_F_M_MASK		BIT(IRQ4M_ERR_FLG_FG_F_M_SHIFT)

#define IRQ4M_APON_SPK_F_M_SHIFT		0
#define IRQ4M_APON_SPK_F_M_MASK			BIT(IRQ4M_APON_SPK_F_M_SHIFT)

#define IRQ4M_MASK_ALL					0xFF

/* AUD9001X_0E_IO_CTRL0 */
#define IO_CTRL0_SDOUT_ST				BIT(2)
#define IO_CTRL0_DMIC_CLK_ST1			BIT(1)
#define IO_CTRL0_DMIC_CLK_ST0			BIT(0)

/* AUD9001X_0F_IO_CTRL1 */
#define IO_CTRL1_DMIC_DATA2_IO_EN		BIT(7)
#define IO_CTRL1_DMIC_DATA1_IO_EN		BIT(6)
#define IO_CTRL1_DMIC_CLK2_IO_TN		BIT(3)
#define IO_CTRL1_DMIC_CLK2_IO_EN		BIT(2)
#define IO_CTRL1_DMIC_CLK1_IO_TN		BIT(1)
#define IO_CTRL1_DMIC_CLK1_IO_EN		BIT(0)

/* AUD9001X_10_PD_REF */
#define PDB_VMID_SHIFT				5
#define PDB_VMID_MASK				BIT(PDB_VMID_SHIFT)

#define PDB_IGEN_SHIFT				4
#define PDB_IGEN_MASK				BIT(PDB_IGEN_SHIFT)

/* AUD9001X_14_PD_DA1 */
#define EN_DCT_PREQ_SHIFT			5
#define EN_DCT_PREQ_MASK			BIT(EN_DCT_PREQ_SHIFT)

#define PDB_DCT_SHIFT				3
#define PDB_DCT_MASK				BIT(PDB_DCT_SHIFT)

#define RESETB_DCT_SHIFT			1
#define RESETB_DCT_MASK				BIT(RESETB_DCT_SHIFT)

/* AUD9001X_15_PD_DA2 */
#define EN_MUTEB_SHIFT				4
#define EN_MUTEB_MASK				BIT(EN_MUTEB_SHIFT)

#define PDB_SPK_PGA_SHIFT			3
#define PDB_SPK_PGA_MASK			BIT(PDB_SPK_PGA_SHIFT)

#define PDB_SPK_BIAS_SHIFT			2
#define PDB_SPK_BIAS_MASK			BIT(PDB_SPK_BIAS_SHIFT)

#define PDB_SPK_DAMP_SHIFT			1
#define PDB_SPK_DAMP_MASK			BIT(PDB_SPK_DAMP_SHIFT)

/* AUD9001X_18_PWAUTO_DA */
#define FAST_CHG_SHIFT				4
#define FAST_CHG_WIDTH				2
#define FAST_CHG_MASK				MASK(FAST_CHG_WIDTH, FAST_CHG_SHIFT)

#define FAST_CHG_0					0
#define FAST_CHG_1					1
#define FAST_CHG_2					2
#define FAST_CHG_3					3

#define APW_SPK_SHIFT				2
#define APW_SPK_MASK				BIT(APW_SPK_SHIFT)

/* AUD9001X_19_CTRL_REF */
#define CTMF_VMID_SHIFT				6
#define CTMF_VMID_WIDTH				2
#define CTMF_VMID_MASK				MASK(CTMF_VMID_WIDTH, CTMF_VMID_SHIFT)

#define CTMF_VMID_OPEN				3
#define CTMF_VMID_500K_OM      	 	2
#define CTMF_VMID_50K_OM        	1
#define CTMF_VMID_5K_OM         	0

/* AUD9001X_1B_SDM_CTR */
#define DSDM_OFFSET_SHIFT			0
#define DSDM_OFFSET_WIDTH			2
#define DSDM_OFFSET_MASK			MASK(DSDM_OFFSET_WIDTH, DSDM_OFFSET_SHIFT)

#define DSDM_OFFSET_8				3
#define DSDM_OFFSET_4   	    	2
#define DSDM_OFFSET_2	        	1
#define DSDM_OFFSET_0	        	0

/* AUD9001X_1D_SV_DA */
#define EN_SPK_SV_SHIFT				6
#define EN_SPK_SV_MASK				BIT(EN_SPK_SV_SHIFT)

#define DLY_SV_SHIFT				4
#define DLY_SV_WIDTH				2
#define DLY_SV_MASK					MASK(DLY_SV_WIDTH, DLY_SV_MASK)

#define FAST_SV_SHIFT				3
#define FAST_SV_MASK				BIT(FAST_SV_SHIFT)

/* AUC9001X_20_AVC_Para29 */
#define AVC_DELAY_CORSE_SHIFT		0
#define AVC_DELAY_CORSE_WIDTH		6
#define AVC_DELAY_CORSE_MASK		MASK(AVC_DELAY_CORSE_WIDTH, \
										AVC_DELAY_CORSE_SHIFT)

/* AUC9001X_21_AVC_Para30 */
#define AVC_DELAY_FINE_SHIFT		0
#define AVC_DELAY_FINE_WIDTH		8
#define AVC_DELAY_FINE_MASK			MASK(AVC_DELAY_FINE_WIDTH, \
										AVC_DELAY_FINE_SHIFT)

/* AUC9001X_22_AVC_Para31 */
#define CIC_DELAY_CORSE_SHIFT		0
#define CIC_DELAY_CORSE_WIDTH		6
#define CIC_DELAY_CORSE_MASK		MASK(CIC_DELAY_CORSE_WIDTH, \
										CIC_DELAY_CORSE_SHIFT)

/* AUC9001X_23_AVC_Para32 */
#define CIC_DELAY_FINE_SHIFT		0
#define CIC_DELAY_FINE_WIDTH		8
#define CIC_DELAY_FINE_MASK			MASK(CIC_DELAY_FINE_WIDTH, \
										CIC_DELAY_FINE_SHIFT)

/* AUC9001X_24_AVC_Para33 */
#define DRC_LIMIT_SHIFT				3
#define DRC_LIMIT_WIDTH				5
#define DRC_LIMIT_MASK				MASK(DRC_LIMIT_WIDTH, DRC_LIMIT_SHIFT)

#define FMUTE_SEL_SHIFT				2
#define FMUTE_SEL_MASK				BIT(FMUTE_SEL_SHIFT)

#define FORCE_FMUTE_SHIFT			1
#define FORCE_FMUTE_MASK			BIT(FORCE_FMUTE_SHIFT)

#define FMUTE_ENB_SHIFT				0
#define FMUTE_ENB_MASK				BIT(FMUTE_ENB_SHIFT)

/* AUC9001X_25_AVC_Para34 */
#define FMUTE_SPEED_SHIFT			5
#define FMUTE_SPEED_WIDTH			3
#define FMUTE_SPEED_MASK			MASK(FMUTE_SPEED_WIDTH, FMUTE_SPEED_SHIFT)

#define ZCD_MODE_SEL_SHIFT			3
#define ZCD_MODE_SEL_WIDTH			2
#define ZCD_MODE_SEL_MASK			MASK(ZCD_MODE_SEL_WIDTH, ZCD_MODE_SEL_SHIFT)

#define CTVOL_SPK_POSITIVE_GAIN_SHIFT	0
#define CTVOL_SPK_POSITIVE_GAIN_WIDTH	3
#define CTVOL_SPK_POSITIVE_GAIN_MASK	MASK(CTVOL_SPK_POSITIVE_GAIN_WIDTH, \
											CTVOL_SPK_POSITIVE_GAIN_SHIFT)

/* AUC9001X_26_AVC_Para35 */
#define UP_MODESEL_SHIFT			7
#define UP_MODESEL_MASK				BIT(UP_MODESEL_SHIFT)

#define UPMODE_TIME_SEL_SHIFT		3
#define UPMODE_TIME_SEL_MASK		BIT(UPMODE_TIME_SEL_SHIFT)

#define UPMODE_SPEED_SHIFT			0
#define UPMODE_SPEED_WIDTH			3
#define UPMODE_SPEED_MASK			MASK(UPMODE_SPEED_WIDTH, UPMODE_SPEED_SHIFT)

/* AUC9001X_27_AVC_Para36 */
#define ZCD_POINT_SEL_SHIFT			7
#define ZCD_POINT_SEL_MASK			BIT(ZCD_POINT_SEL_SHIFT)

#define MUTE_SPK_SHIFT				5
#define MUTE_SPK_MASK				BIT(MUTE_SPK_SHIFT)

#define AVC_DELAY_EN_SHIFT			4
#define AVC_DELAY_EN_MASK			BIT(AVC_DELAY_EN_SHIFT)

#define ZD_INTERVAL_SHIFT			0
#define ZD_INTERVAL_WIDTH			4
#define ZD_INTERVAL_MASK			MASK(ZD_INTERVAL_WIDTH, ZD_INTERVAL_SHIFT)

/* AUC9001X_28_AVC_Para37 */
#define AVC_HOLD_TIME_SHIFT			0
#define AVC_HOLD_TIME_WIDTH			5
#define AVC_HOLD_TIME_MASK			MASK(AVC_HOLD_TIME_WIDTH, \
										AVC_HOLD_TIME_SHIFT)

#define AVC_HOLD_TIME_2u			0
#define AVC_HOLD_TIME_10u			1
#define AVC_HOLD_TIME_20u			2
#define AVC_HOLD_TIME_40u			3
#define AVC_HOLD_TIME_60u			4
#define AVC_HOLD_TIME_80u			5
#define AVC_HOLD_TIME_100u			6
#define AVC_HOLD_TIME_200u			7
#define AVC_HOLD_TIME_400u			8
#define AVC_HOLD_TIME_600u			9
#define AVC_HOLD_TIME_800u			10
#define AVC_HOLD_TIME_1m			11
#define AVC_HOLD_TIME_2m			12
#define AVC_HOLD_TIME_4m			13
#define AVC_HOLD_TIME_8m			14
#define AVC_HOLD_TIME_10m			15
#define AVC_HOLD_TIME_20m			16
#define AVC_HOLD_TIME_40m			17
#define AVC_HOLD_TIME_60m			18
#define AVC_HOLD_TIME_80m			19
#define AVC_HOLD_TIME_100m			20

/* AUC9001X_29_AVC_Para38 */
#define MANUAL_SEL_SHIFT			5
#define MANUAL_SEL_MASK				BIT(MANUAL_SEL_SHIFT)

#define MANUAL_TARGET_LEVEL_SHIFT	0
#define MANUAL_TARGET_LEVEL_WIDTH	5
#define MANUAL_TARGET_LEVEL_MASK	MASK(MANUAL_TARGET_LEVEL_WIDTH, \
										MANUAL_TARGET_LEVEL_SHIFT)

/* AUC9001X_2A_AVC_Para39 */
#define ZDR_MODE_SEL_SHIFT			7
#define ZDR_MODE_SEL_MASK			BIT(ZDR_MODE_SEL_SHIFT)

#define ZDR_SEL_SHIFT				4
#define ZDR_SEL_WIDTH				3
#define ZDR_SEL_MASK				MASK(ZDR_SEL_WIDTH, ZDR_SEL_SHIFT)

#define MUTE_MODE_SEL_SHIFT			3
#define MUTE_MODE_SEL_MASK			BIT(MUTE_MODE_SEL_SHIFT)

#define MUTE_TIME_SHIFT				0
#define MUTE_TIME_WIDTH				3
#define MUTE_TIME_MASK				MASK(MUTE_TIME_WIDTH, MUTE_TIME_SHIFT)

/* AUC9001X_2B_AVC_Para40 */
#define AMUTE_MASKB_SHIFT			7
#define AMUTE_MASKB_MASK			BIT(AMUTE_MASKB_SHIFT)

#define MUTE_TIME_DOWN_SHIFT		4
#define MUTE_TIME_DOWN_MASK			BIT(MUTE_TIME_DOWN_SHIFT)

#define DMUTE_MASKB_SHIFT			3
#define DMUTE_MASKB_MASK			BIT(DMUTE_MASKB_SHIFT)

#define AVC_MUTE_READO_SHIFT		2
#define AVC_MUTE_READO_MASK			BIT(AVC_MUTE_READO_SHIFT)

#define MUTE_CH_SEL_SHIFT			0
#define MUTE_CH_SEL_WIDTH			2
#define MUTE_CH_SEL_MASK			MASK(MUTE_CH_SEL_WIDTH, MUTE_CH_SEL_SHIFT)

#define MUTE_CH_SEL_L				0
#define MUTE_CH_SEL_R				1
#define MUTE_CH_SEL_L_AND_R			2
#define MUTE_CH_SEL_L_OR_R			3

/* AUC9001X_2E_OCPCTRL0 */
#define OCP_STATEL_SHIFT			6
#define OCP_STATEL_WIDTH			2
#define OCP_STATEL_MASK				MASK(OCP_STATEL_WIDTH, OCP_STATEL_SHIFT)

#define OCP_EN_SHIFT				5
#define OCP_EN_MASK					BIT(OCP_EN_SHIFT)

#define OCP_VOL_SEL_SHIFT			4
#define OCP_VOL_SEL_MASK			BIT(OCP_VOL_SEL_SHIFT)

#define OCP_RELEASE_TIME_SHIFT		2
#define OCP_RELEASE_TIME_WIDTH		2
#define OCP_RELEASE_TIME_MASK		MASK(OCP_RELEASE_TIME_WIDTH, \
										OCP_RELEASE_TIME_SHIFT)

#define OCP_DB_TIME_SHIFT			0
#define OCP_DB_TIME_WIDTH			2
#define OCP_DB_TIME_MASK			MASK(OCP_DB_TIME_WIDTH, OCP_DB_TIME_SHIFT)

/* AUC9001X_2F_OCPCTRL1 */
#define OCP_MIN_VOL_SHIFT			0
#define OCP_MIN_VOL_WIDTH			8
#define OCP_MIN_VOL_MASK			MASK(OCP_MIN_VOL_WIDTH, OCP_MIN_VOL_SHIFT)

/* AUD9001X_32_VOL_SPK */
#define CTVOL_SPK_PGA_SHIFT			0
#define CTVOL_SPK_PGA_WIDTH			4
#define CTVOL_SPK_PGA_MASK			MASK(CTVOL_SPK_PGA_WIDTH, \
										CTVOL_SPK_PGA_SHIFT)

/* AUD9001X_36_CTRL_SPK */
#define EN_SPK_SDN_SHIFT			6
#define EN_SPK_SDN_MASK				BIT(EN_SPK_SDN_SHIFT)

#define CTMF_SPK_OSC_SHIFT			4
#define CTMF_SPK_OSC_WIDTH			2
#define CTMF_SPK_OSC_MASK			MASK(CTMF_SPK_OSC_WIDTH, CTMF_SPK_OSC_SHIFT)

#define CTMF_SPK_OSC_ON				3
#define CTMF_SPK_OSC_OFF			0

#define EN_SPK_CAR_SHIFT			3
#define EN_SPK_CAR_MASK				BIT(CTMF_SPK_OSC_ON)

#define EN_SPK_DAMP_SHIFT			2
#define EN_SPK_DAMP_MASK			BIT(EN_SPK_DAMP_SHIFT)

#define EN_SPK_CD_OCP_SHIFT			0
#define EN_SPK_CD_OCP_MASK			BIT(EN_SPK_CD_OCP_SHIFT)

/* AUD9001X_39_DCT_CLK1 */
#define CTMD_DCT_CLK1_SHIFT			2
#define CTMD_DCT_CLK1_WIDTH			2
#define CTMD_DCT_CLK1_MASK			MASK(CTMD_DCT_CLK1_WIDTH, \
										CTMD_DCT_CLK1_SHIFT)

#define CTMD_DCT_CLK2_SHIFT			0
#define CTMD_DCT_CLK2_WIDTH			2
#define CTMD_DCT_CLK2_MASK			MASK(CTMD_DCT_CLK2_WIDTH, \
										CTMD_DCT_CLK2_SHIFT)

/* AUD9001X_3A_KARAOKE0 */
#define OVP_BOTH_SHIFT				7
#define OVP_BOTH_MASK				BIT(OVP_BOTH_SHIFT)

#define MIX_ENR_SHIFT				6
#define MIX_ENR_MASK				BIT(MIX_ENR_SHIFT)

#define RMIX_SEL_SHIFT				4
#define RMIX_SEL_WIDTH				2
#define RMIX_SEL_MASK				MASK(RMIX_SEL_WIDTH, RMIX_SEL_SHIFT)

#define MIX_ENL_SHIFT				2
#define MIX_ENL_MASK				BIT(MIX_ENL_SHIFT)

#define LMIX_SEL_SHIFT				0
#define LMIX_SEL_WIDTH				2
#define LMIX_SEL_MASK				MASK(LMIX_SEL_WIDTH, LMIX_SEL_SHIFT)

/* AUD9001X_3B_KARAOKE1 */
#define DVOL_KARAL_SHIFT			0
#define DVOL_KARAL_WIDTH			8
#define DVOL_KARAL_MASK				MASK(DVOL_KARAL_WIDTH, DVOL_KARAL_SHIFT)

/* AUD9001X_3C_KARAOKE2 */
#define DVOL_KARAR_SHIFT			0
#define DVOL_KARAR_WIDTH			8
#define DVOL_KARAR_MASK				MASK(DVOL_KARAR_WIDTH, DVOL_KARAR_SHIFT)

/* AUD9001X_40_PD */
#define PDB_ADCDIG_SHIFT			7
#define PDB_ADCDIG_MASK				BIT(PDB_ADCDIG_SHIFT)

#define RSTB_DAT_AD_SHIFT			6
#define RSTB_DAT_AD_MASK			BIT(RSTB_DAT_AD_SHIFT)

#define PDB_DACDIG_SHIFT			5
#define PDB_DACDIG_MASK				BIT(PDB_DACDIG_SHIFT)

#define RSTB_DAT_DA_SHIFT			4
#define RSTB_DAT_DA_MASK			BIT(RSTB_DAT_DA_SHIFT)

#define SYS_RSTB_SHIFT				3
#define SYS_RSTB_MASK				BIT(SYS_RSTB_SHIFT)

#define RSTB_OVFW_DA_SHIFT			2
#define RSTB_OVFW_DA_MASK			BIT(RSTB_OVFW_DA_SHIFT)

#define DMIC_CLK1_EN_SHIFT			1
#define DMIC_CLK1_EN_MASK			BIT(DMIC_CLK1_EN_SHIFT)

#define DMIC_CLK0_EN_SHIFT			0
#define DMIC_CLK0_EN_MASK			BIT(DMIC_CLK0_EN_SHIFT)

/* AUD9001X_41_IF1_FORM1 */
#define DAC_DAT_LOOPBACK_SHIFT		7
#define DAC_DAT_LOOPBACK_MASK		BIT(DAC_DAT_LOOPBACK_SHIFT)

#define I2S_DF_SHIFT				4
#define I2S_DF_WIDTH				3
#define I2S_DF_MASK					MASK(I2S_DF_WIDTH, I2S_DF_SHIFT)

#define BCK_POL_SHIFT				1
#define BCK_POL_MASK				BIT(BCK_POL_SHIFT)

#define LRCLK_POL_SHIFT				0
#define LRCLK_POL_MASK				BIT(LRCLK_POL_SHIFT)

#define LRCLK_POL_L_LOW_R_HIGH		1
#define LRCLK_POL_L_HIGH_R_LOW		0

/* AUD9001X_42_IF1_FORM2 */
#define I2S1_XFS_MODE_SHIFT			7
#define I2S1_XFS_MODE_MASK			BIT(I2S1_XFS_MODE_SHIFT)

#define I2S1_XFS_MODE_BLCK_256FS_DN	0
#define I2S1_XFS_MODE_BLCK_256FS_UP	1

#define I2S1_DL_SHIFT				0
#define I2S1_DL_WIDTH				6
#define I2S1_DL_MASK				MASK(I2S1_DL_WIDTH, I2S1_DL_SHIFT)

#define I2S1_DL_8BIT				0x8
#define I2S1_DL_16BIT				0x10
#define I2S1_DL_20BIT				0x14
#define I2S1_DL_24BIT				0x18
#define I2S1_DL_32BIT				0x20

/* AUD9001X_43_IF1_FORM3 */
#define I2S1_XFS_SHIFT				0
#define I2S1_XFS_WIDTH				8
#define I2S1_XFS_MASK				MASK(I2S1_XFS_WIDTH, I2S1_XFS_SHIFT)

#define I2S1_XFS_16FS				0x10
#define I2S1_XFS_32FS				0x20
#define I2S1_XFS_48FS				0x30
#define I2S1_XFS_64FS				0x40
#define I2S1_XFS_96FS				0x60
#define I2S1_XFS_128FS				0x80

/* AUD9001X_44_IF1_FORM4 */
#define SEL_ADC3_SHIFT				6
#define SEL_ADC3_WIDTH				2
#define SEL_ADC3_MASK				MASK(SEL_ADC3_WIDTH, SEL_ADC3_SHIFT)

#define SEL_ADC2_SHIFT				4
#define SEL_ADC2_WIDTH				2
#define SEL_ADC2_MASK				MASK(SEL_ADC2_WIDTH, SEL_ADC2_SHIFT)

#define SEL_ADC1_SHIFT				2
#define SEL_ADC1_WIDTH				2
#define SEL_ADC1_MASK				MASK(SEL_ADC1_WIDTH, SEL_ADC1_SHIFT)

#define SEL_ADC0_SHIFT				0
#define SEL_ADC0_WIDTH				2
#define SEL_ADC0_MASK				MASK(SEL_ADC0_WIDTH, SEL_ADC0_SHIFT)

#define FUEL_GAUGE_OUTPUT_DATA		3
#define ADC_RCH_OUTPUT_DATA			1
#define ADC_LCH_OUTPUT_DATA			0

/* AUD9001X_45_IF1_FORM5 */
#define SEL_DAC1_SHIFT				4
#define SEL_DAC1_WIDTH				2
#define SEL_DAC1_MASK				MASK(SEL_DAC1_WIDTH, SEL_DAC1_SHIFT)

#define SEL_DAC0_SHIFT				0
#define SEL_DAC0_WIDTH				2
#define SEL_DAC0_MASK				MASK(SEL_DAC0_WIDTH, SEL_DAC0_SHIFT)

#define DAC1_OUT					0
#define DAC2_OUT					1
#define DAC3_OUT					2
#define DAC4_OUT					3

/* AUD9001X_46_ADC1 */
#define ADC1_MUTE_AD1_SOFT_SHIFT	7
#define ADC1_MUTE_AD1_SOFT_MASK		BIT(ADC1_MUTE_AD1_SOFT_SHIFT)

#define ADC1_MAXSCALE1_SHIFT		4
#define ADC1_MAXSCALE1_WIDTH		2
#define ADC1_MAXSCALE1_MASK			MASK(ADC1_MAXSCALE1_WIDTH, \
										ADC1_MAXSCALE1_SHIFT)

#define ADC1_HPF_EN1_SHIFT			3
#define ADC1_HPF_EN1_MASK			BIT(ADC1_HPF_EN1_SHIFT)

#define ADC1_HPF_SEL1_SHIFT			1
#define ADC1_HPF_SEL1_WIDTH			2
#define ADC1_HPF_SEL1_MASK			MASK(ADC1_HPF_SEL1_WIDTH, \
										ADC1_HPF_SEL1_SHIFT)

#define ADC1_HPF_SEL1_238HZ			0
#define ADC1_HPF_SEL1_200HZ			1
#define ADC1_HPF_SEL1_100HZ			2
#define ADC1_HPF_SEL1_14_9HZ		3

#define ADC1_MUTE_AD1_EN_SHIFT		0
#define ADC1_MUTE_AD1_EN_MASK		BIT(ADC1_MUTE_AD1_EN_SHIFT)

#define ADC1_MUTE_ENABLE			1
#define ADC1_MUTE_DISABLE			0

/* AUD9001X_47_AVOLL1 */
#define DVOL_ADL_SHIFT				0
#define DVOL_ADL_WIDTH				8
#define DVOL_ADL_MASK				MASK(DVOL_ADL_WIDTH, DVOL_ADL_SHIFT)

/* AUD9001X_48_AVOLR1 */
#define DVOL_ADR_SHIFT				0
#define DVOL_ADR_WIDTH				8
#define DVOL_ADR_MASK				MASK(DVOL_ADR_WIDTH, DVOL_ADR_SHIFT)

/* AUD9001X_49_DMIC_CTR1 */
#define DMIC_POL1_SHIFT				7
#define DMIC_POL1_MASK				BIT(DMIC_POL1_SHIFT)

#define SEL_DMIC_1L_SHIFT			4
#define SEL_DMIC_1L_WIDTH			3
#define SEL_DMIC_1L_MASK			MASK(SEL_DMIC_1L_WIDTH, SEL_DMIC_1L_SHIFT)

#define DMIC_POL2_SHIFT				3
#define DMIC_POL2_MASK				BIT(DMIC_POL2_SHIFT)

#define SEL_DMIC_1R_SHIFT			0
#define SEL_DMIC_1R_WIDTH			3
#define SEL_DMIC_1R_MASK			MASK(SEL_DMIC_1R_WIDTH, SEL_DMIC_1R_SHIFT)

#define DMIC_NORMAL_POL				0
#define DMIC_INVERTED_POL			1

#define ZERODATA					2
#define NOTUSE						3
#define DMIC1L						4
#define DMIC1R						5
#define DMIC2L						6
#define DMIC2R						7

/* AUD9001X_4A_DMIC_CTR2 */
#define DMIC_GAIN_SHIFT				4
#define DMIC_GAIN_WIDTH				4
#define DMIC_GAIN_MASK				MASK(DMIC_GAIN_WIDTH, DMIC_GAIN_SHIFT)

#define DMIC_GAIN_LEVEL_0_5			1
#define DMIC_GAIN_LEVEL_1_0			2
#define DMIC_GAIN_LEVEL_1_5			3
#define DMIC_GAIN_LEVEL_2_0			4
#define DMIC_GAIN_LEVEL_2_5			5
#define DMIC_GAIN_LEVEL_3_0			6
#define DMIC_GAIN_LEVEL_3_5			7
#define DMIC_GAIN_LEVEL_4_0			8
#define DMIC_GAIN_LEVEL_4_5			9
#define DMIC_GAIN_LEVEL_5_0			10
#define DMIC_GAIN_LEVEL_5_5			11
#define DMIC_GAIN_LEVEL_6_0			12
#define DMIC_GAIN_LEVEL_6_5			13
#define DMIC_GAIN_LEVEL_7_0			14
#define DMIC_GAIN_LEVEL_7_5			15

#define DMIC_OSR_SHIFT				2
#define DMIC_OSR_WIDTH				2
#define DMIC_OSR_MASK				MASK(DMIC_OSR_WIDTH, DMIC_OSR_SHIFT)

#define OSR128						0
#define OSR64						1
#define OSR32						2
#define OSR16						3

/**
 * AUD9001X_4B_AVOLL1_SUB, AUD9001X_4C_AVOLR1_SUB
 */
#define AD_DVOL_SHIFT				0
#define AD_DVOL_WIDTH				8
#define AD_DVOL_MAXNUM				0xEA

/* AUD9001X_50_DAC1 */
#define DAC1_DEEM_SHIFT				7
#define DAC1_DEEM_MASK				BIT(DAC1_DEEM_SHIFT)

#define DAC1_MONOMIX_SHIFT			4
#define DAC1_MONOMIX_WIDTH			3
#define DAC1_MONOMIX_MASK			MASK(DAC1_MONOMIX_WIDTH, DAC1_MONOMIX_SHIFT)

#define DAC1_DISABLE				0
#define DAC1_R_MONO					1
#define DAC1_L_MONO 				2
#define DAC1_LR_SWAP				3
#define DAC1_LR_BY_2_MONO			4
#define DAC1_LR_MONO				5

#define DAC1_INGN_MODE_SHIFT		3
#define DAC1_INGN_MODE_MASK			BIT(DAC1_INGN_MODE_SHIFT)

#define DAC1_AIC_DA_SHIFT			2
#define DAC1_AIC_DA_MASK			BIT(DAC1_AIC_DA_SHIFT)

#define DAC1_SFMU_DA_SHIFT			1
#define DAC1_SFMU_DA_MASK			BIT(DAC1_SFMU_DA_SHIFT)

#define DAC1_TXMU_DA_SHIFT			0
#define DAC1_TXMU_DA_MASK			BIT(DAC1_TXMU_DA_SHIFT)

/**
 * AUD9001X_51_DVOLL, AUD9001X_52_DVOLR
 */
#define DA_DVOL_SHIFT				0
#define DA_DVOL_WIDTH				8
#define DA_DVOL_MAXNUM 				0xEA

/* AUD9001X_53_MQS */
#define MQS_ATT_TM_SHIFT				5
#define MQS_ATT_TM_WIDTH				3
#define MQS_ATT_TM_MASK					MASK(MQS_ATT_TM_WIDTH, MQS_ATT_TM_SHIFT)

#define MQS_MAMGN_EN_SHIFT				3
#define MQS_MAMGN_EN_MASK				BIT(MQS_MAMGN_EN_SHIFT)

#define MQS_NORMQS_GN_SHIFT				1
#define MQS_NORMQS_GN_WIDTH				2
#define MQS_NORMQS_GN_MASK				MASK(MQS_NORMQS_GN_WIDTH, MQS_NORMQS_GN_SHIFT)

/* AUD9001X_54_AVC1 */
#define DAC_VOL_BYPS_SHIFT			7
#define DAC_VOL_BYPS_MASK			BIT(DAC_VOL_BYPS_SHIFT)

#define AVC_CON_FLAG_SHIFT			6
#define AVC_CON_FLAG_MASK			BIT(AVC_CON_FLAG_SHIFT)

#define AVC_VA_FLAG_SHIFT			5
#define AVC_VA_FLAG_MASK			BIT(AVC_VA_FLAG_SHIFT)

#define AVC_MU_FLAG_SHIFT			4
#define AVC_MU_FLAG_MASK			BIT(AVC_MU_FLAG_SHIFT)

#define AVC_BYPS_SHIFT				3
#define AVC_BYPS_MASK				BIT(AVC_BYPS_SHIFT)

#define AVC_VA_EN_SHIFT				2
#define AVC_VA_EN_MASK				BIT(AVC_VA_EN_SHIFT)

#define AVC_MU_EN_SHIFT				1
#define AVC_MU_EN_MASK				BIT(AVC_MU_EN_SHIFT)

#define AVC_EN_SHIFT				0
#define AVC_EN_MASK					BIT(AVC_EN_SHIFT)

/* AUD9001X_55_AVC2 */
#define AVC2_AVC_LVL_SHIFT			0
#define AVC2_AVC_LVL_WIDTH			8
#define AVC2_AVC_LVL_MASK			MASK(AVC2_AVC_LVL_WIDTH, AVC2_AVC_LVL_SHIFT)

/* AUD9001X_56_AVC3 */
#define AVC3_AVC_MUTE_LVL_SHIFT		0
#define AVC3_AVC_MUTE_LVL_WIDTH		8
#define AVC3_AVC_MUTE_LVL_MASK		MASK(AVC3_AVC_MUTE_LVL_WIDTH, \
										AVC3_AVC_MUTE_LVL_SHIFT)

/* AUD9001X_57_AVC4 */
#define AVC4_DRC_SLOPE_EN_SHIFT			7
#define AVC4_DRC_SLOPE_EN_MASK			BIT(AVC4_DRC_SLOPE_EN_SHIFT)

#define AVC4_DRC_SLOPE_SEL_SHIFT		4
#define AVC4_DRC_SLOPE_SEL_WIDTH		3
#define AVC4_DRC_SLOPE_SEL_MASK			MASK(AVC4_DRC_SLOPE_SEL_WIDTH, \
										AVC4_DRC_SLOPE_SEL_SHIFT)

#define CTVOL_AVC_POSITIVE_GAIN_SHIFT	0
#define CTVOL_AVC_POSITIVE_GAIN_WIDTH	4
#define CTVOL_AVC_POSITIVE_GAIN_MASK	MASK(CTVOL_AVC_POSITIVE_GAIN_WIDTH, \
										CTVOL_AVC_POSITIVE_GAIN_SHIFT)

/* AUD9001X_58_AVC5 */
#define AVC5_ZCD_EN_SHIFT			7
#define AVC5_ZCD_EN_MASK			BIT(AVC5_ZCD_EN_SHIFT)

#define AVC5_ZCD_Time_Out_SHIFT		0
#define AVC5_ZCD_Time_Out_WIDTH		7
#define AVC5_ZCD_Time_Out_MASK		MASK(AVC5_ZCD_Time_Out_WIDTH, \
										AVC5_ZCD_Time_Out_SHIFT)

/* AUD9001X_59_AVC6 */
#define AVC6_NOISE_GATE_DL_SHIFT	0
#define AVC6_NOISE_GATE_DL_WIDTH	7
#define AVC6_NOISE_GATE_DL_MASK		MASK(AVC6_NOISE_GATE_DL_WIDTH, \
										AVC6_NOISE_GATE_DL_SHIFT)

/* AUD9001X_5A_AVC7 */
#define AVC7_AVC_DELAY_SHIFT		0
#define AVC7_AVC_DELAY_WIDTH		6
#define AVC7_AVC_DELAY_MASK			MASK(AVC7_AVC_DELAY_WIDTH, \
										AVC7_AVC_DELAY_SHIFT)

/* AUD9001X_5B_AVC8 */
#define AVC8_AVC_DET_LEVEL_SHIFT	0
#define AVC8_AVC_DET_LEVEL_WIDTH	8
#define AVC8_AVC_DET_LEVEL_MASK		MASK(AVC8_AVC_DET_LEVEL_WIDTH, \
										AVC8_AVC_DET_LEVEL_SHIFT)

/* AUD9001X_5C_AVC9 */
#define AVC9_CRO_GTR_SHIFT			6
#define AVC9_CRO_GTR_MASK			BIT(AVC9_CRO_GTR_SHIFT)

#define AVC9_CRO_GTL_SHIFT			5
#define AVC9_CRO_GTL_MASK			BIT(AVC9_CRO_GTL_SHIFT)

#define AVC9_CRO_MODE_SHIFT			4
#define AVC9_CRO_MODE_MASK			BIT(AVC9_CRO_MODE_SHIFT)

#define AVC9_CRO_ALW_ON_SHIFT		2
#define AVC9_CRO_ALW_ON_MASK		BIT(AVC9_CRO_ALW_ON_SHIFT)

#define AVC9_CRO_BOTH_SHIFT			1
#define AVC9_CRO_BOTH_MASK			BIT(AVC9_CRO_BOTH_SHIFT)

#define AVC9_CRO_EN_SHIFT			0
#define AVC9_CRO_EN_MASK			BIT(AVC9_CRO_EN_SHIFT)

/* AUD9001X_5D_AVC10 */
#define AVC10_CRO_COEFF_SHIFT		0
#define AVC10_CRO_COEFF_WIDTH		8
#define AVC10_CRO_COEFF_MASK		MASK(AVC10_CRO_COEFF_WIDTH, \
										AVC10_CRO_COEFF_SHIFT)
/* AUD9001X_5E_AVC11 */
#define AVC11_CRO_COEFF_SHIFT		0
#define AVC11_CRO_COEFF_WIDTH		8
#define AVC11_CRO_COEFF_MASK		MASK(AVC11_CRO_COEFF_WIDTH, \
										AVC11_CRO_COEFF_SHIFT)
/* AUD9001X_5F_AVC12 */
#define AVC12_CRO_COEFF_SHIFT		0
#define AVC12_CRO_COEFF_WIDTH		8
#define AVC12_CRO_COEFF_MASK		MASK(AVC12_CRO_COEFF_WIDTH, \
										AVC12_CRO_COEFF_SHIFT)

/* AUD9001X_60_IRQ_SENSOR */
#define ST_ERR_FLG_BCK_SHIFT		7
#define ST_ERR_FLG_BCK_MASK			BIT(ST_ERR_FLG_BCK_SHIFT)

#define ST_ERR_FLG_XBCK_SHIFT		6
#define	ST_ERR_FLG_XBCK_MASK		BIT(ST_ERR_FLG_XBCK_SHIFT)

#define ST_ERR_FLG_LRCK_SHIFT		5
#define ST_ERR_FLG_LRCK_MASK		BIT(ST_ERR_FLG_LRCK_SHIFT)

#define ST_ERR_FLG_XLRCK_SHIFT		4
#define ST_ERR_FLG_XLRCK_MASK		BIT(ST_ERR_FLG_XLRCK_SHIFT)

#define ST_MUTE_FLG_SHIFT			2
#define ST_MUTE_FLG_MASK			BIT(ST_MUTE_FLG_SHIFT)

#define ST_ERR_FLG_FG_SHIFT			1
#define ST_ERR_FLG_FG_MASK			BIT(ST_ERR_FLG_FG_SHIFT)

#define ST_APON_SPK_SHIFT			0
#define ST_APON_SPK_MASK			BIT(ST_APON_SPK_SHIFT)

/* AUD9001X_61_OCP_FLAG */
#define FLAG_OCP_OUTP_P_SHIFT		3
#define FLAG_OCP_OUTP_P_MASK		BIT(FLAG_OCP_OUTP_P_SHIFT)

#define FLAG_OCP_OUTP_N_SHIFT		2
#define FLAG_OCP_OUTP_N_MASK		BIT(FLAG_OCP_OUTP_N_SHIFT)

#define FLAG_OCP_OUTN_P_SHIFT		1
#define FLAG_OCP_OUTN_P_MASK		BIT(FLAG_OCP_OUTN_P_SHIFT)

#define FLAG_OCP_OUTN_N_SHIFT		0
#define FLAG_OCP_OUTN_N_MASK		BIT(FLAG_OCP_OUTN_N_SHIFT)

/* AUD9001X_64_TEST_AD */
#define LOOPSEL_DIG_SHIFT			6
#define LOOPSEL_DIG_WIDTH			2
#define LOOPSEL_DIG_MASK			MASK(LOOPSEL_DIG_WIDTH, \
										LOOPSEL_DIG_SHIFT)

#define LOOPBACK_DIG1_SHIFT			5
#define LOOPBACK_DIG1_MASK			BIT(LOOPBACK_DIG1_SHIFT)

#define TOSE_AD1_SHIFT				3
#define TOSE_AD1_WIDTH				2
#define TOSE_AD1_MASK				MASK(TOSE_AD1_WIDTH, TOSE_AD1_SHIFT)

#define LOOPSEL_FULL_SHIFT			1
#define LOOPSEL_FULL_WIDTH			2
#define LOOPSEL_FULL_MASK			MASK(LOOPSEL_FULL_WIDTH, \
										LOOPSEL_FULL_SHIFT)

#define LOOPBCAK_FULL_SHIFT			0
#define LOOPBCAK_FULL_MASK			BIT(LOOPBCAK_FULL_SHIFT)

/* AUD9001X_67_CED_CHK1 */
#define HALF_PER_LRCK1_SHIFT		0
#define HALF_PER_LRCK1_WIDTH		4
#define HALF_PER_LRCK1_MASK			MASK(HALF_PER_LRCK1_WIDTH, \
										HALF_PER_LRCK1_SHIFT)

/* AUD9001X_68_CED_CHK2 */
#define HALF_PER_LRCK2_SHIFT		0
#define HALF_PER_LRCK2_WIDTH		8
#define HALF_PER_LRCK2_MASK			MASK(HALF_PER_LRCK2_WIDTH, \
										HALF_PER_LRCK2_SHIFT)

/* AUD9001X_69_CED_CHK3 */
#define HALF_PER_BCK_SHIFT			0
#define HALF_PER_BCK_WIDTH			8
#define HALF_PER_BCK_MASK			MASK(HALF_PER_BCK_WIDTH, \
										HALF_PER_BCK_SHIFT)

/* AUD9001X_6C_SW_RESERV */
#define EN_DMIC2_SHIFT  			3
#define EN_DMIC2_MASK   			BIT(EN_DMIC2_SHIFT)

#define EN_DMIC1_SHIFT  			2
#define EN_DMIC1_MASK   			BIT(EN_DMIC1_SHIFT)

#define EN_SPK_SHIFT				1
#define EN_SPK_MASK					BIT(EN_SPK_SHIFT)

/* AUD9001X_71_CLK2_COD */
#define SEL_CHCLK_DA_SHIFT			4
#define SEL_CHCLK_DA_WIDTH			2
#define SEL_CHCLK_DA_MASK			MASK(SEL_CHCLK_DA_WIDTH, \
										SEL_CHCLK_DA_SHIFT)

#define CHOP_CLK_1_BY_4				0
#define CHOP_CLK_1_BY_8				1
#define CHOP_CLK_1_BY_16			2
#define CHOP_CLK_1_BY_32			3

#define EN_HALF_CHOP_DA_SHIFT		0
#define EN_HALF_CHOP_DA_WIDTH		2
#define EN_HALF_CHOP_DA_MASK		MASK(EN_HALF_CHOP_DA_WIDTH, \
										EN_HALF_CHOP_DA_SHIFT)

#define PHASE_SEL_ORIG				0
#define PHASE_SEL_1_BY_4			1
#define PHASE_SEL_2_BY_4			2
#define PHASE_SEL_3_BY_4			3

/* AUD9001X_72_CLK3_COD */
#define CLK_DA_INV_SHIFT			5
#define CLK_DA_INV_MASK				BIT(CLK_DA_INV_SHIFT)

#define CLK_DACHOP_INV_SHIFT		4
#define CLK_DACHOP_INV_MASK			BIT(CLK_DACHOP_INV_SHIFT)

/* AUD9001X_73_DSM1_DA */
#define DSM1_DA_DWAB_SHIFT			5
#define DSM1_DA_DWAB_MASK			BIT(DSM1_DA_DWAB_SHIFT)

#define DSM1_DA_DTHON_SHIFT			4
#define DSM1_DA_DTHON_MASK			BIT(DSM1_DA_DTHON_SHIFT)

#define DSM1_DA_SYM_DTH_SHIFT		3
#define DSM1_DA_SYM_DTH_MASK		BIT(DSM1_DA_SYM_DTH_SHIFT)

#define DSM1_DA_AMT_DTH_SHIFT		0
#define DSM1_DA_AMT_DTH_WIDTH		3
#define DSM1_DA_AMT_DTH_MASK		MASK(DSM1_DA_AMT_DTH_WIDTH, \
										DSM1_DA_AMT_DTH_SHIFT)

/* AUD9001X_74_DSM2_DA */
#define DSM2_DA_MQS_3RD_SHIFT		7
#define DSM2_DA_MQS_3RD_MASK		BIT(DSM2_DA_MQS_3RD_SHIFT)

#define DSM2_DA_ZEROCNT_SHIFT		4
#define DSM2_DA_ZEROCNT_WIDTH		3
#define DSM2_DA_ZEROCNT_MASK		MASK(DSM2_DA_ZEROCNT_WIDTH, \
										DSM2_DA_ZEROCNT_SHIFT)

#define DSM2_DA_MQSCMP_SEL_SHIFT	3
#define DSM2_DA_MQSCMP_SEL_MASK		BIT(DSM2_DA_MQSCMP_SEL_SHIFT)

#define DSM2_DA_INSDMGN_SHIFT		1
#define DSM2_DA_INSDMGN_WIDTH		2
#define DSM2_DA_INSDMGN_MASK		MASK(DSM2_DA_INSDMGN_WIDTH, \
										DSM2_DA_INSDMGN_SHIFT)

#define DSM2_DA_SDM3RD_SHIFT		0
#define DSM2_DA_SDM3RD_MASK			BIT(DSM2_DA_SDM3RD_SHIFT)

/* AUD9001X_75_OFFSET */
#define INGN_MODE_SDM_SHIFT			7
#define INGN_MODE_SDM_MASK			BIT(INGN_MODE_SDM_SHIFT)

#define INSDMGN_SDM_SHIFT			4
#define INSDMGN_SDM_WIDTH			3
#define INSDMGN_SDM_MASK			MASK(INSDMGN_SDM_WIDTH, INSDMGN_SDM_SHIFT)

#define OFFSET_SEL_SHIFT			2
#define OFFSET_SEL_MASK				BIT(OFFSET_SEL_SHIFT)

#define OFFSET_RNG_SHIFT			0
#define OFFSET_RNG_WIDTH			2
#define OFFSET_RNG_MASK				MASK(OFFSET_RNG_WIDTH, OFFSET_RNG_SHIFT)

/* AUD9001X_77_CHOP_DA */
#define EN_DCT_CHOP_SHIFT			5
#define EN_DCT_CHOP_MASK			BIT(EN_DCT_CHOP_SHIFT)

#define EN_SPK_PGA_CHOP_SHIFT		2
#define EN_SPK_PGA_CHOP_MASK		BIT(EN_SPK_PGA_CHOP_SHIFT)

#define EN_SPK_CHOP_SHIFT			1
#define EN_SPK_CHOP_MASK			BIT(EN_SPK_CHOP_SHIFT)

/* AUD9001X_7A_MAN_GN1 */
#define MANGN_MSB_SHIFT				0
#define MANGN_MSB_WIDTH				8
#define MANGN_MSB_MASK				MASK(MANGN_MSB_WIDTH, MANGN_MSB_SHIFT)

/* AUD9001X_7B_MAN_GN2 */
#define MANGN_LSB_SHIFT				0
#define MANGN_LSB_WIDTH				8
#define MANGN_LSB_MASK				MASK(MANGN_LSB_WIDTH, MANGN_LSB_SHIFT)

/* AUD9001X_80_PDB_ACC1 */
#define EN_ACC_CLK_SHIFT     		1
#define EN_ACC_CLK_MASK      		BIT(EN_ACC_CLK_SHIFT)

#define CODEC_SDOUT_EN_SHIFT     	0
#define CODEC_SDOUT_EN_MASK      	BIT(CODEC_SDOUT_EN_SHIFT)

/* AUD9001X_81_PDB_ACC2 */
#define T_EN_OCC_SHIFT   			3
#define T_EN_OCC_MASK    			BIT(T_EN_OCC_SHIFT)

#define ENB_HVS_SHIFT   			2
#define ENB_HVS_MASK    			BIT(ENB_HVS_SHIFT)

#define EN_OCC_SHIFT				1
#define EN_OCC_MASK					BIT(EN_OCC_SHIFT)

#define COD_RST_MODE_SHIFT			0
#define COD_RST_MODE_MASK			BIT(COD_RST_MODE_SHIFT)

/* AUD9001X_92_BOOST_HR0 */
#define BOOST_HR0_HEADROOM_SHIFT	0
#define BOOST_HR0_HEADROOM_WIDTH	8
#define BOOST_HR0_HEADROOM_MASK		MASK(BOOST_HR0_HEADROOM_WIDTH, \
										BOOST_HR0_HEADROOM_SHIFT)

/* AUD9001X_93_BOOST_HR1 */
#define BOOST_HR1_HEADROOM_SHIFT	0
#define BOOST_HR1_HEADROOM_WIDTH	8
#define BOOST_HR1_HEADROOM_MASK		MASK(BOOST_HR1_HEADROOM_WIDTH, \
										BOOST_HR1_HEADROOM_SHIFT)

/* AUD9001X_94_BST_CTL */
#define DBFS_ADJ_SHIFT				4
#define DBFS_ADJ_WIDTH				4
#define DBFS_ADJ_MASK				MASK(DBFS_ADJ_WIDTH, DBFS_ADJ_SHIFT)

#define BOOST_CTRL_EN_SHIFT			3
#define BOOST_CTRL_EN_MASK			BIT(BOOST_CTRL_EN_SHIFT)

#define CTBV_BST_PRESET_SHIFT		0
#define CTBV_BST_PRESET_WIDTH		3
#define CTBV_BST_PRESET_MASK		MASK(CTBV_BST_PRESET_WIDTH, \
										CTBV_BST_PRESET_SHIFT)

/* AUD9001X_95_FG_DAT_RO0 */
#define FG_DATA_RO0_SHIFT		0
#define FG_DATA_RO0_WIDTH		8
#define FG_DATA_RO0_MASK		MASK(FG_DATA_RO0_WIDTH, FG_DATA_RO0_SHIFT)

/* AUD9001X_96_FG_DAT_RO1 */
#define FG_DATA_RO1_SHIFT		0
#define FG_DATA_RO1_WIDTH		8
#define FG_DATA_RO1_MASK		MASK(FG_DATA_RO1_WIDTH, FG_DATA_RO1_SHIFT)

/* AUD9001X_97_VBAT_M0 */
#define FG_MDATA0_SHIFT		 	0
#define FG_MDATA0_WIDTH		 	8
#define FG_MDATA0_MASK			MASK(FG_MDATA0_WIDTH, FG_MDATA0_SHIFT)

/* AUD9001X_98_VBAT_M1 */
#define FG_MDATA1_SHIFT			0
#define FG_MDATA1_WIDTH			8
#define FG_MDATA1_MASK			MASK(FG_MDATA1_WIDTH, FG_MDATA1_SHIFT)

/* AUD9001X_99_TEST_VBAT */
#define OFF_TD_TIME_SHIFT		6
#define OFF_TD_TIME_WIDTH		2
#define OFF_TD_TIME_MASK		MASK(OFF_TD_TIME_WIDTH, OFF_TD_TIME_SHIFT)

#define FG_DATA_MSEL_SHIFT		5
#define FG_DATA_MSEL_MASK		BIT(FG_DATA_MSEL_SHIFT)

#define BST_MSEL_SHIFT			4
#define BST_MSEL_MASK			BIT(BST_MSEL_SHIFT)

#define MEN_BST_SHIFT			3
#define MEN_BST_MASK			BIT(MEN_BST_SHIFT)

#define MCTBV_BST_SHIFT			0
#define MCTBV_BST_WIDTH			3
#define MCTBV_BST_MASK			MASK(MCTBV_BST_WIDTH, MCTBV_BST_SHIFT)

/* AUD9001X_9A_VSUM_RO0 */
#define VSUM_RO0_SHIFT			0
#define VSUM_RO0_WIDTH			8
#define VSUM_RO0_MASK			MASK(VSUM_RO0_WIDTH, VSUM_RO0_SHIFT)

/* AUD9001X_9B_VSUM_RO1 */
#define VSUM_RO1_SHIFT			0
#define VSUM_RO1_WIDTH			8
#define VSUM_RO1_MASK			MASK(VSUM_RO1_WIDTH, VSUM_RO1_SHIFT)

/* AUD9001X_9C_BOOST_CTR_R */
#define POL_EN_BST_SHIFT		4
#define POL_EN_BST_MASK			BIT(POL_EN_BST_SHIFT)

#define EN_BST_RO_SHIFT			3
#define EN_BST_RO_MASK			BIT(EN_BST_RO_SHIFT)

#define CTBV_BST_RO_SHIFT		0
#define CTBV_BST_RO_WIDTH		3
#define CTBV_BST_RO_MASK		MASK(CTBV_BST_RO_WIDTH, CTBV_BST_RO_SHIFT)

/* AUD9001X_9D_BGC4_0 */
#define BGC4_0_CTRL4_SHIFT		0
#define BGC4_0_CTRL4_WIDTH		8
#define BGC4_0_CTRL4_MASK		MASK(BGC4_0_CTRL4_WIDTH, BGC4_0_CTRL4_SHIFT)

/* AUD9001X_9E_BGC4_1 */
#define BGC4_1_CTRL4_SHIFT		0
#define BGC4_1_CTRL4_WIDTH		8
#define BGC4_1_CTRL4_MASK		MASK(BGC4_1_CTRL4_WIDTH, BGC4_1_CTRL4_SHIFT)

/* AUD9001X_9F_BGC4_2 */
#define BGC4_2_CTRL4_SHIFT		0
#define BGC4_2_CTRL4_WIDTH		8
#define BGC4_2_CTRL4_MASK		MASK(BGC4_2_CTRL4_WIDTH, BGC4_2_CTRL4_SHIFT)

/* AUD9001X_B0_CTR_SPK_MU1 */
#define STEP_TIME_SHIFT			5
#define STEP_TIME_WIDTH			3
#define STEP_TIME_MASK			MASK(STEP_TIME_WIDTH, STEP_TIME_SHIFT)

#define AUTO_RESET_ENB_SHIFT	4
#define AUTO_RESET_ENB_MASK		BIT(AUTO_RESET_ENB_SHIFT)

#define AMU_READY_MASK_SHIFT	2
#define AMU_READY_MASK_MASK		BIT(AMU_READY_MASK_SHIFT)

#define VOL_TIME_SHIFT			1
#define VOL_TIME_MASK			BIT(VOL_TIME_SHIFT)

#define AMU_SPK_SHIFT			0
#define AMU_SPK_MASK			BIT(AMU_SPK_SHIFT)

/* AUD9001X_B1_CTR_SPK_MU2 */
#define CTREG_PDB_SPK_DAMP_SHIFT	7
#define CTREG_PDB_SPK_DAMP_MASK 	BIT(CTREG_PDB_SPK_DAMP_SHIFT)

#define CTREG_PDB_SPK_BIAS_SHIFT	6
#define CTREG_PDB_SPK_BIAS_MASK 	BIT(CTREG_PDB_SPK_BIAS_SHIFT)

#define CTREG_PDB_SPK_PGA_SHIFT		5
#define CTREG_PDB_SPK_PGA_MASK 		BIT(CTREG_PDB_SPK_PGA_SHIFT)

#define CTREG_RESETB_DCT_SHIFT		4
#define CTREG_RESETB_DCT_MASK 		BIT(CTREG_RESETB_DCT_SHIFT)

#define CTREG_PDB_DCT_SHIFT			3
#define CTREG_PDB_DCT_MASK 			BIT(CTREG_PDB_DCT_SHIFT)

#define CTREG_PDB_IGEN_SHIFT		2
#define CTREG_PDB_IGEN_MASK 		BIT(CTREG_PDB_IGEN_SHIFT)

#define CTREG_EN_DCT_PREQ_SHIFT		1
#define CTREG_EN_DCT_PREQ_MASK 		BIT(CTREG_EN_DCT_PREQ_SHIFT)

#define CTREG_PDB_VMID_SHIFT		0
#define CTREG_PDB_VMID_MASK 		BIT(CTREG_PDB_VMID_SHIFT)

/* AUD9001X_B2_CTR_SPK_MU3 */
#define SEL_CTVOL_SPK_PGA_SV_SHIFT	5
#define SEL_CTVOL_SPK_PGA_SV_MASK 	BIT(SEL_CTVOL_SPK_PGA_SV_SHIFT)

#define CTREG_CTVOL_SPK_PGA_SHIFT	4
#define CTREG_CTVOL_SPK_PGA_MASK 	BIT(CTREG_CTVOL_SPK_PGA_SHIFT)

#define CTREG_EN_MUTEB_SHIFT		3
#define CTREG_EN_MUTEB_MASK 		BIT(CTREG_EN_MUTEB_SHIFT)

#define CTREG_EN_SPK_DAMP_SHIFT		2
#define CTREG_EN_SPK_DAMP_MASK 		BIT(CTREG_EN_SPK_DAMP_SHIFT)

#define CTREG_PDB_SPK_CAR_SHIFT		1
#define CTREG_PDB_SPK_CAR_MASK 		BIT(CTREG_PDB_SPK_CAR_SHIFT)

#define CTREG_EN_SPK_CD_OCP_SHIFT	0
#define CTREG_EN_SPK_CD_OCP_MASK	BIT(CTREG_EN_SPK_CD_OCP_SHIFT)

/* AUD9001X_B3_CTR_SPK_MU4 */
#define OM_EN_MUTEB_SHIFT			7
#define OM_EN_MUTEB_MASK 			BIT(OM_EN_MUTEB_SHIFT)

#define IM_EN_MUTEB_SHIFT			6
#define IM_EN_MUTEB_MASK 			BIT(IM_EN_MUTEB_SHIFT)

#define OM_EN_SPK_DAMP_SHIFT		5
#define OM_EN_SPK_DAMP_MASK 		BIT(OM_EN_SPK_DAMP_SHIFT)

#define IM_EN_SPK_DAMP_SHIFT		4
#define IM_EN_SPK_DAMP_MASK			BIT(IM_EN_SPK_DAMP_SHIFT)

#define OM_EN_SPK_CAR_SHIFT			3
#define OM_EN_SPK_CAR_MASK 			BIT(OM_EN_SPK_CAR_SHIFT)

#define IM_EN_SPK_CAR_SHIFT			2
#define IM_EN_SPK_CAR_MASK 			BIT(IM_EN_SPK_CAR_SHIFT)

#define OM_PDB_SPK_DAMP_SHIFT		1
#define OM_PDB_SPK_DAMP_MASK 		BIT(OM_PDB_SPK_DAMP_SHIFT)

#define IM_PDB_SPK_DAMP_SHIFT		0
#define IM_PDB_SPK_DAMP_MASK 		BIT(IM_PDB_SPK_DAMP_SHIFT)

/* AUD9001X_B4_CTR_SPK_MU5 */
#define OM_EN_SPK_CD_OCP_SHIFT		7
#define OM_EN_SPK_CD_OCP_MASK 		BIT(OM_EN_SPK_CD_OCP_SHIFT)

#define IM_EN_SPK_CD_OCP_SHIFT		6
#define IM_EN_SPK_CD_OCP_MASK 		BIT(IM_EN_SPK_CD_OCP_SHIFT)

#define OM_PDB_SPK_BIAS_SHIFT		5
#define OM_PDB_SPK_BIAS_MASK 		BIT(OM_PDB_SPK_BIAS_SHIFT)

#define IM_PDB_SPK_BIAS_SHIFT		4
#define IM_PDB_SPK_BIAS_MASK 		BIT(IM_PDB_SPK_BIAS_SHIFT)

#define OM_PDB_SPK_PGA_SHIFT		3
#define OM_PDB_SPK_PGA_MASK 		BIT(OM_PDB_SPK_PGA_SHIFT)

#define IM_PDB_SPK_PGA_SHIFT		2
#define IM_PDB_SPK_PGA_MASK 		BIT(IM_PDB_SPK_PGA_SHIFT)

/* AUD9001X_B5_CTR_SPK_MU6 */
#define OM_RESETB_DCT_SHIFT			7
#define OM_RESETB_DCT_MASK 			BIT(OM_RESETB_DCT_SHIFT)

#define IM_RESETB_DCT_SHIFT			6
#define IM_RESETB_DCT_MASK 			BIT(IM_RESETB_DCT_SHIFT)

#define OM_PDB_DCT_SHIFT			5
#define OM_PDB_DCT_MASK 			BIT(OM_PDB_DCT_SHIFT)

#define IM_PDB_DCT_SHIFT			4
#define IM_PDB_DCT_MASK 			BIT(IM_PDB_DCT_SHIFT)

#define OM_EN_DWA_STUCK_SHIFT		3
#define OM_EN_DWA_STUCK_MASK 		BIT(OM_EN_DWA_STUCK_SHIFT)

#define IM_EN_DWA_STUCK_SHIFT		2
#define IM_EN_DWA_STUCK_MASK 		BIT(IM_EN_DWA_STUCK_SHIFT)

#define OM_DIG_RESET_SHIFT			1
#define OM_DIG_RESET_MASK 			BIT(OM_DIG_RESET_SHIFT)

#define IM_DIG_RESET_SHIFT			0
#define IM_DIG_RESET_MASK 			BIT(IM_DIG_RESET_SHIFT)

/* AUD9001X_B6_CTR_SPK_MU7 */
#define OM_PDB_IGEN_SHIFT			7
#define OM_PDB_IGEN_MASK 			BIT(OM_PDB_IGEN_SHIFT)

#define IM_PDB_IGEN_SHIFT			6
#define IM_PDB_IGEN_MASK 			BIT(IM_PDB_IGEN_SHIFT)

#define OM_EN_DCT_PREQ_SHIFT		5
#define OM_EN_DCT_PREQ_MASK 		BIT(OM_EN_DCT_PREQ_SHIFT)

#define IM_EN_DCT_PREQ_SHIFT		4
#define IM_EN_DCT_PREQ_MASK 		BIT(IM_EN_DCT_PREQ_SHIFT)

/* AUD9001X_D8_OFFSET_DAL */
#define OFFSET_SIGN_DAL_SHIFT		7
#define OFFSET_SIGN_DAL_MASK 		BIT(OFFSET_SIGN_DAL_SHIFT)

#define OFFSET_LV_DAL_SHIFT			0
#define OFFSET_LV_DAL_WIDTH			7
#define OFFSET_LV_DAL_MASK			MASK(OFFSET_LV_DAL_WIDTH, \
										OFFSET_LV_DAL_SHIFT)

/* AUD9001X_D9_OFFSET_DAR */
#define OFFSET_SIGN_DAR_SHIFT		7
#define OFFSET_SIGN_DAR_MASK 		BIT(OFFSET_SIGN_DAR_SHIFT)

#define OFFSET_LV_DAR_SHIFT			0
#define OFFSET_LV_DAR_WIDTH			7
#define OFFSET_LV_DAR_MASK			MASK(OFFSET_LV_DAR_WIDTH, \
										OFFSET_LV_DAR_SHIFT)

/* AUD9001X_DA_CTRL_IREF5 */
#define CTMI_DCT_SHIFT				2
#define CTMI_DCT_WIDTH				2
#define CTMI_DCT_MASK				MASK(CTMI_DCT_WIDTH, \
										CTMI_DCT_SHIFT)

#define CTMI_PGA_SHIFT				0
#define CTMI_PGA_WIDTH				2
#define CTMI_PGA_MASK				MASK(CTMI_PGA_WIDTH, \
										CTMI_PGA_SHIFT)

/* AUD9001X_DB_CTRL_SPKS1 */
#define CTMF_SPK_PGA_CHOP_SHIFT		7
#define CTMF_SPK_PGA_CHOP_MASK 		BIT(CTMF_SPK_PGA_CHOP_SHIFT)

#define CTMI_SPK_CAR_SHIFT			5
#define CTMI_SPK_CAR_WIDTH			2
#define CTMI_SPK_CAR_MASK			MASK(CTMI_SPK_CAR_WIDTH, \
										CTMI_SPK_CAR_SHIFT)

#define CTMI_SPK_INT_SHIFT			3
#define CTMI_SPK_INT_WIDTH			2
#define CTMI_SPK_INT_MASK			MASK(CTMI_SPK_INT_WIDTH, \
										CTMI_SPK_INT_SHIFT)

#define CTCD_SPK_INT1_SHIFT			0
#define CTCD_SPK_INT1_WIDTH			3
#define CTCD_SPK_INT1_MASK			MASK(CTCD_SPK_INT1_WIDTH, \
										CTCD_SPK_INT1_SHIFT)

/* AUD9001X_DC_CTRL_SPKS2 */
#define CTMI_SPK_ISEN_SHIFT			6
#define CTMI_SPK_ISEN_WIDTH			2
#define CTMI_SPK_ISEN_MASK			MASK(CTMI_SPK_ISEN_WIDTH, \
										CTMI_SPK_ISEN_SHIFT)

#define CTMD_SPK_DLY_SHIFT			4
#define CTMD_SPK_DLY_WIDTH			2
#define CTMD_SPK_DLY_MASK			MASK(CTMD_SPK_DLY_WIDTH, \
										CTMD_SPK_DLY_SHIFT)

#define CTMD_SPK_SLO_SHIFT			1
#define CTMD_SPK_SLO_WIDTH			2
#define CTMD_SPK_SLO_MASK			MASK(CTMD_SPK_SLO_WIDTH, \
										CTMD_SPK_SLO_SHIFT)

#define CTMF_SPK_CHOP_SHIFT			0
#define CTMF_SPK_CHOP_MASK 			BIT(CTMF_SPK_CHOP_SHIFT)

/* AUD9001X_DD_CTRL_SPKS3 */
#define CTMI_SPK_OCP_SHIFT			6
#define CTMI_SPK_OCP_WIDTH			2
#define CTMI_SPK_OCP_MASK			MASK(CTMI_SPK_OCP_WIDTH, \
										CTMI_SPK_OCP_SHIFT)

#define CTRV_CD_OCP_RES_SHIFT		4
#define CTRV_CD_OCP_RES_WIDTH		2
#define CTRV_CD_OCP_RES_MASK		MASK(CTRV_CD_OCP_RES_WIDTH, \
										CTRV_CD_OCP_RES_SHIFT)

/* AUD9001X_E0_AVC_PARA0 */
#define AVC_HEADROOM_SHIFT			4
#define AVC_HEADROOM_WIDTH			2
#define AVC_HEADROOM_MASK			MASK(AVC_HEADROOM_WIDTH, \
										AVC_HEADROOM_SHIFT)

#define AVC_HEADSHOT_SHIFT			1
#define AVC_HEADSHOT_MASK 			BIT(AVC_HEADSHOT_SHIFT)

#define AVC_HMODE_SHIFT				0
#define AVC_HMODE_MASK 				BIT(AVC_HMODE_SHIFT)

/* AUD9001X_E1_AVC_PARA1 */
#define AVC_MUTE_HYSTERISIS_VAL_SHIFT	4
#define AVC_MUTE_HYSTERISIS_VAL_WIDTH	4
#define AVC_MUTE_HYSTERISIS_VAL_MASK	MASK(AVC_MUTE_HYSTERISIS_VAL_WIDTH, \
										AVC_MUTE_HYSTERISIS_VAL_SHIFT)

#define AVC_HYSTERISIS_VAL_SHIFT		0
#define AVC_HYSTERISIS_VAL_WIDTH		4
#define AVC_HYSTERISIS_VAL_MASK			MASK(AVC_HYSTERISIS_VAL_WIDTH, \
										AVC_HYSTERISIS_VAL_SHIFT)

/* AUD9001X_E2_AVC_PARA2 */
#define SIGN_DV_SHIFT				6
#define SIGN_DV_MASK 				BIT(SIGN_DV_SHIFT)

#define AVC_DVOL_VARI_SHIFT			0
#define AVC_DVOL_VARI_WIDTH			6
#define AVC_DVOL_VARI_MASK			MASK(AVC_DVOL_VARI_WIDTH, \
										AVC_DVOL_VARI_SHIFT)

/* AUD9001X_E3_AVC_PARA3 */
#define SIGN_AV_SHIFT				6
#define SIGN_AV_MASK 				BIT(SIGN_AV_SHIFT)

#define AVC_AVOL_VARI_SHIFT			0
#define AVC_AVOL_VARI_WIDTH			6
#define AVC_AVOL_VARI_MASK			MASK(AVC_AVOL_VARI_WIDTH, \
										AVC_AVOL_VARI_SHIFT)

/* AUD9001X_E4_AVC_PARA4 */
#define SIGN_DC_SHIFT				6
#define SIGN_DC_MASK 				BIT(SIGN_DC_SHIFT)

#define AVC_DVOL_CONS_SHIFT			0
#define AVC_DVOL_CONS_WIDTH			6
#define AVC_DVOL_CONS_MASK			MASK(AVC_DVOL_CONS_WIDTH, \
										AVC_DVOL_CONS_SHIFT)

/* AUD9001X_E5_AVC_PARA5 */
#define SIGN_AC_SHIFT				6
#define SIGN_AC_MASK 				BIT(SIGN_AC_SHIFT)

#define AVC_AVOL_CONS_SHIFT			0
#define AVC_AVOL_CONS_WIDTH			6
#define AVC_AVOL_CONS_MASK			MASK(AVC_AVOL_CONS_WIDTH, \
										AVC_AVOL_CONS_SHIFT)

/* AUD9001X_E6_AVC_PARA6 */
#define SIGN_DN_SHIFT				6
#define SIGN_DN_MASK 				BIT(SIGN_DN_SHIFT)

#define AVC_DVOL_NG_SHIFT			0
#define AVC_DVOL_NG_WIDTH			6
#define AVC_DVOL_NG_MASK			MASK(AVC_DVOL_NG_WIDTH, \
										AVC_DVOL_NG_SHIFT)

/* AUD9001X_E7_AVC_PARA7 */
#define SIGN_AN_SHIFT				6
#define SIGN_AN_MASK 				BIT(SIGN_AN_SHIFT)

#define AVC_AVOL_NG_SHIFT			0
#define AVC_AVOL_NG_WIDTH			6
#define AVC_AVOL_NG_MASK			MASK(AVC_AVOL_NG_WIDTH, \
										AVC_AVOL_NG_SHIFT)

/* AUD9001X_E8_AVC_PARA8 */
#define PARA8_CTRL0_SHIFT			0
#define PARA8_CTRL0_WIDTH			8
#define PARA8_CTRL0_MASK			MASK(PARA8_CTRL0_WIDTH, \
										PARA8_CTRL0_SHIFT)

/* AUD9001X_E9_AVC_PARA9 */
#define PARA9_CTRL0_SHIFT			0
#define PARA9_CTRL0_WIDTH			8
#define PARA9_CTRL0_MASK			MASK(PARA9_CTRL0_WIDTH, \
										PARA9_CTRL0_SHIFT)

/* AUD9001X_EA_AVC_PARA10 */
#define PARA10_CTRL0_SHIFT			0
#define PARA10_CTRL0_WIDTH			8
#define PARA10_CTRL0_MASK			MASK(PARA10_CTRL0_WIDTH, \
										PARA10_CTRL0_SHIFT)

/* AUD9001X_EB_AVC_PARA11 */
#define PARA11_CTRL1_SHIFT			0
#define PARA11_CTRL1_WIDTH			8
#define PARA11_CTRL1_MASK			MASK(PARA11_CTRL1_WIDTH, \
										PARA11_CTRL1_SHIFT)

/* AUD9001X_EC_AVC_PARA12 */
#define PARA12_CTRL1_SHIFT			0
#define PARA12_CTRL1_WIDTH			8
#define PARA12_CTRL1_MASK			MASK(PARA12_CTRL1_WIDTH, \
										PARA12_CTRL1_SHIFT)

/* AUD9001X_ED_AVC_PARA13 */
#define PARA13_CTRL1_SHIFT			0
#define PARA13_CTRL1_WIDTH			8
#define PARA13_CTRL1_MASK			MASK(PARA13_CTRL1_WIDTH, \
										PARA13_CTRL1_SHIFT)

/* AUD9001X_EE_AVC_PARA14 */
#define PARA14_CTRL2_SHIFT			0
#define PARA14_CTRL2_WIDTH			8
#define PARA14_CTRL2_MASK			MASK(PARA14_CTRL2_WIDTH, \
										PARA14_CTRL2_SHIFT)

/* AUD9001X_EF_AVC_PARA15 */
#define PARA15_CTRL2_SHIFT			0
#define PARA15_CTRL2_WIDTH			8
#define PARA15_CTRL2_MASK			MASK(PARA15_CTRL2_WIDTH, \
										PARA15_CTRL2_SHIFT)

/* AUD9001X_F0_AVC_PARA16 */
#define PARA16_CTRL2_SHIFT			0
#define PARA16_CTRL2_WIDTH			8
#define PARA16_CTRL2_MASK			MASK(PARA16_CTRL2_WIDTH, \
										PARA16_CTRL2_SHIFT)

/* AUD9001X_F1_AVC_PARA17 */
#define PARA17_CTRL3_SHIFT			0
#define PARA17_CTRL3_WIDTH			8
#define PARA17_CTRL3_MASK			MASK(PARA17_CTRL3_WIDTH, \
										PARA17_CTRL3_SHIFT)

/* AUD9001X_F2_AVC_PARA18 */
#define PARA18_CTRL3_SHIFT			0
#define PARA18_CTRL3_WIDTH			8
#define PARA18_CTRL3_MASK			MASK(PARA18_CTRL3_WIDTH, \
										PARA18_CTRL3_SHIFT)

/* AUD9001X_F3_AVC_PARA19 */
#define PARA19_CTRL3_SHIFT			0
#define PARA19_CTRL3_WIDTH			8
#define PARA19_CTRL3_MASK			MASK(PARA19_CTRL3_WIDTH, \
										PARA19_CTRL3_SHIFT)

/* AUD9001X_F4_AVC_PARA20 */
#define PARA20_EP_SPK_DIG_MUTEB_SHIFT	6
#define PARA20_EP_SPK_DIG_MUTEB_MASK 	BIT(PARA20_EP_SPK_DIG_MUTEB_SHIFT)

#define PARA20_HP_ANA_MUTE_ENB_SHIFT	5
#define PARA20_HP_ANA_MUTE_ENB_MASK 	BIT(PARA20_HP_ANA_MUTE_ENB_SHIFT)

#define PARA20_AVC_DELAY_EN_SHIFT		4
#define PARA20_AVC_DELAY_EN_MASK 		BIT(PARA20_AVC_DELAY_EN_SHIFT)

/* AUD9001X_F5_AVC_PARA21 */
#define PARA21_AVC_DELAY_CORSE_SHIFT	0
#define PARA21_AVC_DELAY_CORSE_WIDTH	6
#define PARA21_AVC_DELAY_CORSE_MASK		MASK(PARA21_AVC_DELAY_CORSE_WIDTH, \
										PARA21_AVC_DELAY_CORSE_SHIFT)

/* AUD9001X_F6_AVC_PARA22 */
#define PARA22_AVC_DELAY_FINE_SHIFT		0
#define PARA22_AVC_DELAY_FINE_WIDTH		8
#define PARA22_AVC_DELAY_FINE_MASK		MASK(PARA22_AVC_DELAY_FINE_WIDTH, \
										PARA22_AVC_DELAY_FINE_SHIFT)

/* AUD9001X_F7_AVC_PARA23 */
#define PARA23_CTVOL_SPK_PGA_SHIFT		0
#define PARA23_CTVOL_SPK_PGA_WIDTH		6
#define PARA23_CTVOL_SPK_PGA_MASK		MASK(PARA23_CTVOL_SPK_PGA_WIDTH, \
										PARA23_CTVOL_SPK_PGA_SHIFT)

/* AUD9001X_F9_AVC_PARA25 */
#define AVC_ADC_Channel_MUTE_LVL_SHIFT	0
#define AVC_ADC_Channel_MUTE_LVL_WIDTH	8
#define AVC_ADC_Channel_MUTE_LVL_MASK	MASK(AVC_ADC_Channel_MUTE_LVL_WIDTH, \
										AVC_ADC_Channel_MUTE_LVL_SHIFT)
#define ADC_NG_THRESHOLD_MAX		0x83

/* AUD9001X_FA_AVC_PARA26 */
#define AVC_ADC_NOISE_GATE_LVL_SHIFT	0
#define AVC_ADC_NOISE_GATE_LVL_WIDTH	8
#define AVC_ADC_NOISE_GATE_LVL_MASK		MASK(AVC_ADC_NOISE_GATE_LVL_WIDTH, \
										AVC_ADC_NOISE_GATE_LVL_SHIFT)
#define ADC_NG_LVL_MAX			0xEA

/* AUD9001X_FB_AVC_PARA27 */
#define AVC_DAC_NOISE_GATE_LVL_SHIFT	0
#define AVC_DAC_NOISE_GATE_LVL_WIDTH	8
#define AVC_DAC_NOISE_GATE_LVL_MASK		MASK(AVC_DAC_NOISE_GATE_LVL_WIDTH, \
										AVC_DAC_NOISE_GATE_LVL_SHIFT)

/* AUD9001X_FC_AVC_PARA28 */
#define PARA28_NG_EN_ADCC_SHIFT			3
#define PARA28_NG_EN_ADCC_MASK 			BIT(PARA28_NG_EN_ADCC_SHIFT)

#define PARA28_NG_EN_ADCR_SHIFT			2
#define PARA28_NG_EN_ADCR_MASK 			BIT(PARA28_NG_EN_ADCR_SHIFT)

#define PARA28_NG_EN_ADCL_SHIFT			1
#define PARA28_NG_EN_ADCL_MASK 			BIT(PARA28_NG_EN_ADCL_SHIFT)

#define PARA28_NG_EN_RCV_SHIFT			0
#define PARA28_NG_EN_RCV_MASK 			BIT(PARA28_NG_EN_RCV_SHIFT)

/* AUD9001X_FD_ODSEL4 */
#define FD_ODSEL4_CTRLN_SHIFT		0
#define FD_ODSEL4_CTRLN_WIDTH		8
#define FD_ODSEL4_CTRLN_MASK		MASK(FD_ODSEL4_CTRLN_WIDTH, \
										FD_ODSEL4_CTRLN_SHIFT)

/* AUD9001X_FE_ODSEL5 */
#define FD_ODSEL5_CTRLN_SHIFT		0
#define FD_ODSEL5_CTRLN_WIDTH		8
#define FD_ODSEL5_CTRLN_MASK		MASK(FD_ODSEL5_CTRLN_WIDTH, \
										FD_ODSEL5_CTRLN_SHIFT)

/* AUD9001X_FF_ODSEL6 */
#define FD_ODSEL6_CTRLN_SHIFT		0
#define FD_ODSEL6_CTRLN_WIDTH		8
#define FD_ODSEL6_CTRLN_MASK		MASK(FD_ODSEL6_CTRLN_WIDTH, \
										FD_ODSEL6_CTRLN_SHIFT)

#endif /* _AUD9001X_H */
